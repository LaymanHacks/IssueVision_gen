'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Generated by Merlin Version: 1.0.0.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------
Imports System
Imports System.Data
Imports System.Data.Common
Imports System.Data.SqlClient
Imports IssueVision.Data.DbCommandProvider

Namespace IssueVision.Data.SqlDbCommandProvider 

  
Public Class SqlDbSubStatusesCommandProvider
      Implements IDbSubStatusesCommandProvider
    
      ReadOnly _dbConnHolder As DbConnectionHolder

      Public Sub New()
          _dbConnHolder = New DbConnectionHolder(DbConnectionName)
      End Sub

      Public ReadOnly Property DbConnectionName() As String Implements IDbSubStatusesCommandProvider.DbConnectionName
          Get
              Return "IssueVisionConnection"
          End Get
      End Property

      Public ReadOnly Property SubStatusesDbConnectionHolder() As DbConnectionHolder Implements IDbSubStatusesCommandProvider.SubStatusesDbConnectionHolder
          Get
              Return _dbConnHolder
          End Get
      End Property
      
    
        ''' <summary>
        ''' Selects one or more records from the SubStatuses table 
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataDbCommand() As IDbCommand Implements IDbSubStatusesCommandProvider.GetGetDataDbCommand
            
            Dim command As New SqlCommand("SubStatuses_Select")
            command.CommandType = CommandType.StoredProcedure
    
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Updates one or more records from the SubStatuses table 
        ''' </summary>
      ''' <param name="subStatusId" />
      ''' <param name="name" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetUpdateDbCommand( ByVal subStatusId As Byte,  ByVal name As String) As IDbCommand Implements IDbSubStatusesCommandProvider.GetUpdateDbCommand
            
            Dim command As New SqlCommand("SubStatuses_Update")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@SubStatusId", SqlDbType.tinyint, subStatusId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Name", SqlDbType.nvarchar, name))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Inserts a record into the SubStatuses table on the database.
        ''' </summary>
      ''' <param name="subStatusId" />
      ''' <param name="name" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetInsertDbCommand( ByVal subStatusId As Byte,  ByVal name As String) As IDbCommand Implements IDbSubStatusesCommandProvider.GetInsertDbCommand
            
            Dim command As New SqlCommand("SubStatuses_Insert")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@SubStatusId", SqlDbType.tinyint, subStatusId))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Name", SqlDbType.nvarchar, name))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Deletes one or more records from the SubStatuses table 
        ''' </summary>
      ''' <param name="subStatusId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetDeleteDbCommand( ByVal subStatusId As Byte) As IDbCommand Implements IDbSubStatusesCommandProvider.GetDeleteDbCommand
            
            Dim command As New SqlCommand("SubStatuses_Delete")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@SubStatusId", SqlDbType.tinyint, subStatusId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataPageable returns a IDataReader populated with a subset of data from SubStatuses
        ''' </summary>
      ''' <param name="sortExpression" />
      ''' <param name="page" />
      ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataPageableDbCommand( ByVal sortExpression As String,  ByVal page As Int32,  ByVal pageSize As Int32) As IDbCommand Implements IDbSubStatusesCommandProvider.GetGetDataPageableDbCommand
            
            Dim command As New SqlCommand("SubStatuses_GetDataPageable")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar, sortExpression))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetRowCount returns the row count for SubStatuses
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetRowCountDbCommand() As IDbCommand Implements IDbSubStatusesCommandProvider.GetGetRowCountDbCommand
            
            Dim command As New SqlCommand("SubStatuses_GetRowCount")
            command.CommandType = CommandType.StoredProcedure
    
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataBySubStatusId returns a IDataReader for SubStatuses
        ''' </summary>
      ''' <param name="subStatusId" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataBySubStatusIdDbCommand( ByVal subStatusId As Byte) As IDbCommand Implements IDbSubStatusesCommandProvider.GetGetDataBySubStatusIdDbCommand
            
            Dim command As New SqlCommand("SubStatuses_GetDataBySubStatusId")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@SubStatusId", SqlDbType.tinyint, subStatusId))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
  End Class
 End Namespace
  