'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Generated by Merlin Version: 1.0.0.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------
Imports System
Imports System.Data
Imports System.Data.Common
Imports System.Data.SqlClient
Imports IssueVision.Data.DbCommandProvider

Namespace IssueVision.Data.SqlDbCommandProvider 

  
Public Class SqlDbFilesCommandProvider
      Implements IDbFilesCommandProvider
    
      ReadOnly _dbConnHolder As DbConnectionHolder

      Public Sub New()
          _dbConnHolder = New DbConnectionHolder(DbConnectionName)
      End Sub

      Public ReadOnly Property DbConnectionName() As String Implements IDbFilesCommandProvider.DbConnectionName
          Get
              Return "IssueVisionConnection"
          End Get
      End Property

      Public ReadOnly Property FilesDbConnectionHolder() As DbConnectionHolder Implements IDbFilesCommandProvider.FilesDbConnectionHolder
          Get
              Return _dbConnHolder
          End Get
      End Property
      
    
        ''' <summary>
        ''' Selects one or more records from the Files table 
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataDbCommand() As IDbCommand Implements IDbFilesCommandProvider.GetGetDataDbCommand
            
            Dim command As New SqlCommand("Files_Select")
            command.CommandType = CommandType.StoredProcedure
    
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Updates one or more records from the Files table 
        ''' </summary>
      ''' <param name="fileID" />
      ''' <param name="issueID" />
      ''' <param name="fileName" />
      ''' <param name="data" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetUpdateDbCommand( ByVal fileID As Guid,  ByVal issueID As Int64,  ByVal fileName As String,  ByVal data As Byte()) As IDbCommand Implements IDbFilesCommandProvider.GetUpdateDbCommand
            
            Dim command As New SqlCommand("Files_Update")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@FileID", SqlDbType.uniqueidentifier, fileID))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IssueID", SqlDbType.bigint, issueID))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@FileName", SqlDbType.nvarchar, fileName))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Data", SqlDbType.image, data))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Inserts a record into the Files table on the database.
        ''' </summary>
      ''' <param name="fileID" />
      ''' <param name="issueID" />
      ''' <param name="fileName" />
      ''' <param name="data" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetInsertDbCommand( ByVal fileID As Guid,  ByVal issueID As Int64,  ByVal fileName As String,  ByVal data As Byte()) As IDbCommand Implements IDbFilesCommandProvider.GetInsertDbCommand
            
            Dim command As New SqlCommand("Files_Insert")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@FileID", SqlDbType.uniqueidentifier, fileID))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IssueID", SqlDbType.bigint, issueID))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@FileName", SqlDbType.nvarchar, fileName))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@Data", SqlDbType.image, data))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Deletes one or more records from the Files table 
        ''' </summary>
      ''' <param name="fileID" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetDeleteDbCommand( ByVal fileID As Guid) As IDbCommand Implements IDbFilesCommandProvider.GetDeleteDbCommand
            
            Dim command As New SqlCommand("Files_Delete")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@FileID", SqlDbType.uniqueidentifier, fileID))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataPageable returns a IDataReader populated with a subset of data from Files
        ''' </summary>
      ''' <param name="sortExpression" />
      ''' <param name="page" />
      ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataPageableDbCommand( ByVal sortExpression As String,  ByVal page As Int32,  ByVal pageSize As Int32) As IDbCommand Implements IDbFilesCommandProvider.GetGetDataPageableDbCommand
            
            Dim command As New SqlCommand("Files_GetDataPageable")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar, sortExpression))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetRowCount returns the row count for Files
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetRowCountDbCommand() As IDbCommand Implements IDbFilesCommandProvider.GetGetRowCountDbCommand
            
            Dim command As New SqlCommand("Files_GetRowCount")
            command.CommandType = CommandType.StoredProcedure
    
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByFileID returns a IDataReader for Files
        ''' </summary>
      ''' <param name="fileID" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByFileIDDbCommand( ByVal fileID As Guid) As IDbCommand Implements IDbFilesCommandProvider.GetGetDataByFileIDDbCommand
            
            Dim command As New SqlCommand("Files_GetDataByFileID")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@FileID", SqlDbType.uniqueidentifier, fileID))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByIssueID returns a IDataReader for Files
        ''' </summary>
      ''' <param name="issueID" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByIssueIDDbCommand( ByVal issueID As Int64) As IDbCommand Implements IDbFilesCommandProvider.GetGetDataByIssueIDDbCommand
            
            Dim command As New SqlCommand("Files_GetDataByIssueID")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IssueID", SqlDbType.bigint, issueID))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetDataByIssueIDPageable returns a IDataReader populated with a subset of data from Files
        ''' </summary>
      ''' <param name="issueID" />
      ''' <param name="sortExpression" />
      ''' <param name="page" />
      ''' <param name="pageSize" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByIssueIDPageableDbCommand( ByVal issueID As Int64,  ByVal sortExpression As String,  ByVal page As Int32,  ByVal pageSize As Int32) As IDbCommand Implements IDbFilesCommandProvider.GetGetDataByIssueIDPageableDbCommand
            
            Dim command As New SqlCommand("Files_GetDataByIssueIDPageable")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IssueID", SqlDbType.bigint, issueID))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@sortExpression", SqlDbType.varchar, sortExpression))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@page", SqlDbType.Int, page))
                  command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@pageSize", SqlDbType.Int, pageSize))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
        ''' <summary>
        ''' Function GetRowCount returns the row count for Files
        ''' </summary>
      ''' <param name="issueID" />
        ''' <returns></returns>
        ''' <remarks></remarks> 
        Public Function GetGetDataByIssueIDRowCountDbCommand( ByVal issueID As Int64) As IDbCommand Implements IDbFilesCommandProvider.GetGetDataByIssueIDRowCountDbCommand
            
            Dim command As New SqlCommand("Files_GetDataByIssueIDRowCount")
            command.CommandType = CommandType.StoredProcedure
                command.Parameters.Add(SqlParameterFactory.CreateInputParameter("@IssueID", SqlDbType.bigint, issueID))
      
            command.Connection = CType(_dbConnHolder.Connection, SqlConnection)
            Return command
      End Function
         
            
  End Class
 End Namespace
  