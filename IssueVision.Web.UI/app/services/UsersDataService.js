//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Generated by Merlin Version: 1.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
(function () {
    'use strict';

    var serviceId = 'usersDataService';
    angular.module('app').service(serviceId, ['$http', usersDataService]);

    function usersDataService($http) {
        var urlBase = '/api/users';            

        this.getData = function () {
            return $http.get(urlBase  + '/all');
        };

         this.updateUsers = function(users) {
            return $http.put(urlBase, users);
        };

         this.insertUsers = function(users) {
            return $http.post(urlBase, users);
        };

         this.deleteUsers = function(name) {
            return $http.Delete(urlBase, name);
        };

        this.getDataPageable = function (sortExpression, page, pageSize) { 
            return $http({
                 url: urlBase ,
                 method: 'GET',
                 params: {
                     sortExpression : sortExpression || '', 
                     page : page || '', 
                     pageSize : pageSize || ''
                 }
            });
        };

        this.getDataByName = function (name) {
            return $http.get(urlBase);
        };

        this.getDataByPasswordQuestion = function (passwordQuestion) {
            return $http.get('/api/securityQuestions/' + passwordQuestion + '/users/all');
        };

        this.getDataByPasswordQuestionPageable = function (passwordQuestion, sortExpression, page, pageSize) { 
            return $http({
                 url: '/api/securityQuestions/' + passwordQuestion + '/users',
                 method: 'GET',
                 params: {
                     passwordQuestion : passwordQuestion || '', 
                     sortExpression : sortExpression || '', 
                     page : page || '', 
                     pageSize : pageSize || ''
                 }
            });
        };


    }
})();
